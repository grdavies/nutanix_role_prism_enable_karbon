---
# download_images.yml tasks file for nutanix_prism_role_karbon_enable
- name: Get available karbon images
  uri:
    url: "https://{{ nutanix_host }}:{{ nutanix_port }}/karbon/acs/image/list"
    method: GET
    validate_certs: "{{ validate_certs }}"
    headers:
      Authorization: "{{ nutanix_api_auth }}"
    status_code: 200
    return_content: yes
  register: nutanix_karbon_image_list
  ignore_errors: no

- name: Debug nutanix_karbon_image_list.json
  debug:
    var: nutanix_karbon_image_list.json
  when: nutanix_debug

- name: Get list of available image uuids that are available
  set_fact:
    nutanix_karbon_images_missing: "{{ nutanix_karbon_image_list.json | community.general.json_query(query) | to_json | from_json }}"
  vars:
    query: "[?status != 'Downloaded'].{uuid: uuid}"

- name: Debug nutanix_karbon_images_missing
  debug:
    var: nutanix_karbon_images_missing
  when: nutanix_debug

# - name: Stash the downloaded Karbon image UUIDs
#   set_fact:
#     nutanix_karbon_images_missing: "{{ nutanix_karbon_images_missing|default([]) + [ {'name': item.version, 'uuid': item.uuid } ] }}"
#   with_items: "{{ nutanix_karbon_images_available.json }}"
#   when:
#     - item.status != "Downloaded"

# - name: Debug nutanix_karbon_images_missing
#   debug:
#     var: nutanix_karbon_images_missing
#   when: nutanix_debug

- name: Download available Karbon image(s)
  uri:
    url: "https://{{ nutanix_host }}:{{ nutanix_port }}/karbon/acs/image/download"
    body:
      uuid: item.uuid
    method: POST
    validate_certs: "{{ validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ nutanix_api_auth }}"
  register: karbon_image_download
  ignore_errors: no
  with_items: "{{ nutanix_karbon_images_missing }}"

- name: Debug nutanix_karbon_image_list.json | list | count
  debug:
    var: nutanix_karbon_image_list.json | list | count
  when: nutanix_debug

- name: Debug nutanix_karbon_image_list.json | selectattr('status','equalto','Downloaded') | list | count
  debug:
    var: nutanix_karbon_image_list.json | selectattr('status','equalto','Downloaded') | list | count
  when: nutanix_debug

- name: Wait for image(s) to complete download
  uri:
    url: "https://{{ nutanix_host }}:{{ nutanix_port }}/karbon/acs/image/list"
    method: GET
    validate_certs: "{{ validate_certs }}"
    body_format: json
    status_code: 200
    headers:
      Authorization: "{{ nutanix_api_auth }}"
  register: nutanix_karbon_image_download_list
  ignore_errors: no
  until:
    - nutanix_karbon_image_download_list.json | selectattr('status','equalto','Downloaded) | list | count == nutanix_karbon_image_download_list.json | list | count
# - name: Stash the downloaded Karbon images
#   set_fact:
#     karbon_images_available: "{{ karbon_images_available|default([]) + [ {'name': item.version, 'uuid': item.uuid } ] }}"
#   with_items: "{{ nutanix_karbon_image_download_list.json }}"

# - name: Debug karbon_images_available
#   debug:
#     var: karbon_images_available
#   when: nutanix_debug
